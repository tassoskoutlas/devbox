---

- name: Create codebase with specific package version
  composer:
    command: create-project
    arguments: drupal/recommended-project:{{ item.item.version }} .
    working-dir: "{{ item.item.path }}"
  when: ( item.item.version is defined ) and ( item.item.version != "")

- name: Create codebase with latest stable
  composer:
    command: create-project
    arguments: drupal/recommended-project .
    working-dir: "{{ item.item.path }}"
  when: ( item.item.version is not defined ) or ( item.item.version == "")

- name: Create settings.php
  copy:
    src: "{{ item.item.path }}/{{ item.item.docroot }}/sites/default/default.settings.php"
    dest: "{{ item.item.path }}/{{ item.item.docroot }}/sites/default/settings.php"
    remote_src: yes
    force: no

- name: Update Drupal's hash_salt setting
  lineinfile:
    path: "{{ item.item.path }}/{{ item.item.docroot }}/sites/default/settings.php"
    regexp: "^\\$settings\\['hash_salt"
    line: "$settings['hash_salt'] = 'DvkOcqLrxtGYNv25npi1r2+UEF43EASGk4JdSTVRCx4KSvygbbRWRps6WbLwP2NnZeOhJ36X0g==';"

- name: Update Drupal's config directory setting
  lineinfile:
    path: "{{ item.item.path }}/{{ item.item.docroot }}/sites/default/settings.php"
    regexp: "^\\#\\ \\$settings\\['config_sync_directory"
    line: "$settings['config_sync_directory'] = '../config/sync';"

- name: Add database config into Drupal's settings
  blockinfile:
    path: "{{ item.item.path }}/{{ item.item.docroot }}/sites/default/settings.php"
    block: |
      $databases['default']['default'] = [
        'database' => getenv('DB_NAME'),
        'username' => getenv('DB_USER'),
        'password' => getenv('DB_PASS'),
        'host' => 'localhost',
        'port' => '3306',
        'driver' => 'mysql',
        'prefix' => '',
        'collation' => 'utf8mb4_general_ci',
      ];

      if (file_exists($app_root . '/' . $site_path . '/settings.local.php')) {
        include $app_root . '/' . $site_path . '/settings.local.php';
      }

- name: Create settings.local.php
  copy:
    src: "{{ item.item.path }}/{{ item.item.docroot }}/sites/example.settings.local.php"
    dest: "{{ item.item.path }}/{{ item.item.docroot }}/sites/default/settings.local.php"
    remote_src: yes
    force: no

- name: Create cached twig files templates
  become: yes
  file:
    path: /tmp/twig-cache
    owner: www-data
    group: www-data
    state: directory

- name: Update cache twig definition on settings.local.php
  blockinfile:
    path: "{{ item.item.path }}/{{ item.item.docroot }}/sites/default/settings.local.php"
    block: |
      $settings['php_storage']['twig']['directory'] = '/tmp/twig-cache/php';
      $settings['php_storage']['twig']['secret'] = $settings['hash_salt'];
